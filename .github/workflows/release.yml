name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p dist
          go build -ldflags="-s -w -X main.version=${{ github.event.inputs.version || github.ref_name }}" \
            -o dist/kconduit-${{ matrix.suffix }} \
            ./cmd/kconduit/main.go

      - name: Compress binary
        run: |
          cd dist
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip kconduit-${{ matrix.suffix }}.zip kconduit-${{ matrix.suffix }}
          else
            tar -czf kconduit-${{ matrix.suffix }}.tar.gz kconduit-${{ matrix.suffix }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kconduit-${{ matrix.suffix }}
          path: |
            dist/kconduit-${{ matrix.suffix }}
            dist/kconduit-${{ matrix.suffix }}.tar.gz
            dist/kconduit-${{ matrix.suffix }}.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create checksums
        run: |
          cd artifacts
          for dir in */; do
            cd "$dir"
            for file in *.tar.gz *.zip; do
              if [ -f "$file" ]; then
                sha256sum "$file" > "$file.sha256"
                mv "$file" "$file.sha256" ../
              fi
            done
            cd ..
          done

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/*.tar.gz
            artifacts/*.zip
            artifacts/*.sha256
          body: |
            ## Installation

            ### macOS (Intel)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kconduit-darwin-amd64.tar.gz | tar xz
            chmod +x kconduit-darwin-amd64
            sudo mv kconduit-darwin-amd64 /usr/local/bin/kconduit
            ```

            ### macOS (Apple Silicon)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kconduit-darwin-arm64.tar.gz | tar xz
            chmod +x kconduit-darwin-arm64
            sudo mv kconduit-darwin-arm64 /usr/local/bin/kconduit
            ```

            ### Linux (AMD64)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kconduit-linux-amd64.tar.gz | tar xz
            chmod +x kconduit-linux-amd64
            sudo mv kconduit-linux-amd64 /usr/local/bin/kconduit
            ```

            ### Linux (ARM64)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kconduit-linux-arm64.tar.gz | tar xz
            chmod +x kconduit-linux-arm64
            sudo mv kconduit-linux-arm64 /usr/local/bin/kconduit
            ```

            ## Verify Installation
            ```bash
            kconduit --version
            ```
